spring:
  datasource:
    # url: jdbc:postgresql://db_auth:5432/db_auth  # Database URL (when running inside Docker)
    # url: jdbc:postgresql://localhost:5433/db_auth  # Alternative URL for local testing
    url: jdbc:postgresql://localhost:5432/db_auth    # Localhost for local development
    username: nexoc                                # Database username
    password: '0880'                               # Database password (quoted in case of special characters)
    driver-class-name: org.postgresql.Driver       # PostgreSQL JDBC driver

  jpa:
    hibernate:
      ddl-auto: create-drop                        # Drop and recreate DB schema on every app start (DEV ONLY)
    show-sql: true                                 # Print SQL queries to console
    properties:
      hibernate:
        format_sql: true                           # Make SQL logs more readable
      database: postgresql                         # Database type
      database-platform: org.hibernate.dialect.PostgreSQLDialect  # Hibernate dialect for PostgreSQL

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: Ov23liHv6TNkl75EZlnD        # GitHub OAuth client ID (set in GitHub developer settings)
            client-secret: e6955285d5dfcd195f80c70df7c89d71ab6e5b3f      # GitHub OAuth client secret
            scope: read:user, user:email                    # Request access to user's email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"  # Where GitHub will redirect after login
            client-name: GitHub                    # Display name of the provider
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize  # GitHub auth page
            token-uri: https://github.com/login/oauth/access_token       # GitHub token endpoint
            user-info-uri: https://api.github.com/user                   # GitHub API to get user info

server:
  port: 8001                                       # Backend runs on http://localhost:8001

base:
  url: "http://localhost:8001"                     # Used in redirect-uri for OAuth (matches server port)

jwt:
  secret: bXlTdXBlclVsdHJhU2VjcmV0S2V5Rm9ySldUXzIwMjUhQCMp  # Secret for signing JWT tokens (base64 string)
  expiration: 900000                                # JWT expiration in milliseconds (15 minutes)

springdoc:
  swagger-ui:
    enabled: true                                  # Enable Swagger UI (for interactive API docs)
  api-docs:
    enabled: true                                  # Enable OpenAPI docs generation

logging:
  level:
    org.springframework.web: DEBUG
    org.springdoc: DEBUG


cors:
  allowed-origins:
    - "http://localhost:3000"
    - "http://localhost:8080"
    - "https://frontend2.com"
    - "http://backend.com"
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - "*"
  allow-credentials: true


frontend:
  url: "http://localhost:3000/oauth-success"       # Redirect URL after successful GitHub login (frontend route)
